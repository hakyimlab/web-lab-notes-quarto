---
title: "BrainXcan supplementary tables content"
author: "Haky Im"
date: "2023-08-09"
editor_options: 
  chunk_output_type: console
---

:::{.callout-tip}
## Summary
Trying to get a sense of what we have in the supplementary tables.
:::


:::{.callout-warning collapse="true"}
## Note
Table S6 has results from brainxcan in 9 ukb phenotypes
:::

```{r}
suppressMessages(library(tidyverse))
suppressMessages(library(glue))
PRE = "/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data"
SLUG="brainxcan-supplementary-tables-content" ## copy the slug from the header
bDATE='2023-08-09' ## copy the date from the blog's header here
DATA = glue("{PRE}/{bDATE}-{SLUG}")
if(!file.exists(DATA)) system(glue::glue("mkdir {DATA}"))
WORK=DATA

##system(glue("open {DATA}")) ## this will open the folder 

## load qqunif
devtools::source_gist("38431b74c6c0bf90c12f")

```

```{r}
system(glue("ls -r {DATA}/*"))
```

## load 2022-11-17 tables
```{r eval=FALSE}
# stab2 = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S2.xlsx"))
# stab3 = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S3.xlsx"))
# stab4 = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S4.xlsx"))
# stab5 = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S5.xlsx"))
# stab6 = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S6.xlsx"))
# stab7 = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S7.xlsx"))
# stab8 = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S8.xlsx"))
# stab8factor = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S8-w-factor.xlsx"))
# stab9 = readxl::read_excel(glue("{DATA}/revision_plos_gen_20221117/Table_S9.xlsx"))
```

## load 2023-08-11 tables
```{r}
stab2 = readxl::read_excel(glue("{DATA}/updated-to-2023-08-11/Table_S2.xlsx"))
stab3 = readxl::read_excel(glue("{DATA}/updated-to-2023-08-11/Table_S3.xlsx"))
stab4 = readxl::read_excel(glue("{DATA}/updated-to-2023-08-11/Table_S4.xlsx"))
stab5 = readxl::read_excel(glue("{DATA}/updated-to-2023-08-11/Table_S5.xlsx"))
stab6 = readxl::read_excel(glue("{DATA}/updated-to-2023-08-11/Table_S6.xlsx"))
stab7 = readxl::read_excel(glue("{DATA}/updated-to-2023-08-11/Table_S7.xlsx"))
stab7wofactor = readxl::read_excel(glue("{DATA}/updated-to-2023-08-11/Table_S7-wo-factor.xlsx"))
stab8 = readxl::read_excel(glue("{DATA}/updated-to-2023-08-11/Table_S8.xlsx"))

```

```{r qqunif of 35 traits}

phenolist = unique(stab7$phenotype)
mydata=stab7
for(pheno in phenolist)
{
  qqunif(mydata$pval_adj_perm_null[mydata$model=="ridge" & mydata$phenotype== pheno],main=pheno)
  mtext("perm and factor adjusted")
}

```

## plot zscores for dMRI
```{r}

table(stab2$pc1_name,useNA='always')

stab7 %>% 
  inner_join(stab2 %>% 
               filter(modality=="dMRI", 
                      measurement_type=="dMRI skeleton (TBSS-style measurement)") %>% 
               select(IDP,region,subtype)) %>% 
  filter(model=="ridge") %>% 
  filter(subtype=="ICVF") %>% 
  select(IDP,pheno=phenotype,z=z_adj_perm_null) %>% 
  ggplot(aes(IDP,pheno,fill=z))  + geom_tile()
```


```{r}

# ##install.packages("RColorBrewer")
# suppressMessages(library("RColorBrewer"))


  
myplot <- function(subtipo)
{df <- stab7 %>% 
  inner_join(stab2 %>% 
               filter(modality=="dMRI", 
                      measurement_type=="dMRI skeleton (TBSS-style measurement)") %>% 
               select(IDP,region,subtype)) %>% 
  filter(model=="ridge") %>% 
  filter(subtype==subtipo) 


# Define significance labels
df <- df %>%
  select(IDP, pheno = phenotype, z = z_adj_perm_null) %>%
  mutate(significance = case_when(
    abs(z) > 4 ~ "*",
    abs(z) <= 4 & abs(z) > 2 ~ "\u00B7",  # Use MIDDLE DOT
    TRUE ~ ""
  ))

# Plot
pp <- ggplot(df, aes(x = IDP, y = pheno)) +
  geom_tile(aes(fill = z)) + 
  geom_text(aes(label = significance), vjust = 0.5, hjust = 0.5) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
  labs(fill = "z-value") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
  ggtitle(subtipo)

print(pp)
}


for(subtipo in c("FA","ICVF","OD","ISOVF"))
{
  myplot(subtipo)
}


```



