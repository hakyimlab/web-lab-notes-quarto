{
  "hash": "e1058a3b62090079b2ea4877e186c9ec",
  "result": {
    "markdown": "---\ntitle: how to run for loops in parallel in R\nauthor: Haky Im\ndate: 2024-02-16\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(foreach)\nlibrary(doParallel)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: iterators\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: parallel\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Set up parallel backend\nn.cores <- detectCores() - 1\nregisterDoParallel(cores = n.cores)\n\nnsim <- 9\nn_values <- c(1, 10, 100, 1000, 10000, 100000,2e5,3e5, 1000000, 10000000, 1e8)\nresults <- data.frame(n = integer(), method = character(), time = numeric(), stringsAsFactors = FALSE)\n\nfor (n in n_values) {\n  # Parallel run\n  tic_parallel <- Sys.time()\n  foreach(i = 1:nsim, .combine = 'c') %dopar% {\n    mean(runif(n) ^ 2)\n  }\n  toc_parallel <- Sys.time()\n  parallel_time <- as.numeric(toc_parallel - tic_parallel, units = \"secs\")\n  \n  # Sequential run\n  tic_sequential <- Sys.time()\n  foreach(i = 1:nsim, .combine = 'c') %do% {\n    mean(runif(n) ^ 2)\n  }\n  toc_sequential <- Sys.time()\n  sequential_time <- as.numeric(toc_sequential - tic_sequential, units = \"secs\")\n  \n  # Store results\n  results <- rbind(results, data.frame(n = n, method = \"Parallel\", time = parallel_time))\n  results <- rbind(results, data.frame(n = n, method = \"Sequential\", time = sequential_time))\n}\n\n# Plot results\nggplot(results, aes(x = n, y = time, color = method)) +\n  geom_line() +\n  scale_x_log10() +\n#  scale_y_log10() +\n  geom_point() +\n  labs(x = \"Number of samples (n)\", y = \"Time (seconds)\", title = \"Comparison of Parallel and Sequential Run Times\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot results\nggplot(results, aes(x = n, y = time, color = method)) +\n  geom_line() +\n  scale_x_log10() +\n  scale_y_log10() +\n  geom_point() +\n  labs(x = \"Number of samples (n)\", y = \"Time (seconds)\", title = \"Log Log scale Comparison of Parallel and Sequential Run Times\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n\n\n> In this exammple, n~2e5 is the break even point, beyond which, the overhead of parallel computation is offset by the parallel computation",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}