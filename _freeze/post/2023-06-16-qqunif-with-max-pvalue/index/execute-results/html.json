{
  "hash": "2d3de87b4d53b1a90e9049b4fb5b5ea3",
  "result": {
    "markdown": "---\ntitle: \"qqunif function with filtered p-values\"\nauthor: \"Haky Im\"\ndate: \"2023-06-16\"\n---\n\n\n## qqunif for filtered p-values\n\nexpected under the null is (1:nn) \\* maxp / (nn+1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqqunif_maxp = \n  function(p,BH=T,CI=T,mlog10_p_thres=30,maxp=1,...)\n  {\n    ## thresholded by default at 1e-30\n    p=na.omit(p)\n    nn = length(p)\n    xx =  -log10( (1:nn)*maxp / (nn+1) )\n    \n    p_thres = 10^{-mlog10_p_thres}\n    if( sum( p < p_thres) )\n    {\n      warning(paste(\"thresholding p to \",p_thres) )\n      p = pmax(p, p_thres)\n    }\n    plot( xx,  -sort(log10(p)),\n          xlab=expression(Expected~~-log[10](italic(p))),\n          ylab=expression(Observed~~-log[10](italic(p))),\n          cex.lab=1.4,mgp=c(2,1,0),\n          ... )\n    abline(0,1,col='gray')\n    if(BH)\n    {\n      abline(-log10(0.05),1, col='red',lty=1)\n      abline(-log10(0.10),1, col='orange',lty=2)\n      abline(-log10(0.25),1, col='yellow',lty=3)\n      legend('topleft', c(\"FDR = 0.05\",\"FDR = 0.10\",\"FDR = 0.25\"),\n             col=c('red','orange','yellow'),lty=1:3, cex=1)\n      abline(h=-log10(0.05/nn)) ## bonferroni\n    }\n    if(CI)\n    {\n      ## create the confidence intervals\n      c95 <- rep(0,nn)\n      c05 <- rep(0,nn)\n      ## the jth order statistic from a\n      ## uniform(0,1) sample\n      ## has a beta(j,n-j+1) distribution\n      ## (Casella & Berger, 2002,\n      ## 2nd edition, pg 230, Duxbury)\n      ## this portion was posted by anonymous on\n      ## http://gettinggeneticsdone.blogspot.com/2009/11/qq-plots-of-p-values-in-r-using-ggplot2.html\n\n      for(i in 1:nn)\n      {\n        c95[i] <- qbeta(0.95,i,nn-i+1)*maxp\n        c05[i] <- qbeta(0.05,i,nn-i+1)*maxp\n      }\n\n      lines(xx,-log10(c95),col='gray')\n      lines(xx,-log10(c05),col='gray')\n    }\n  }\n```\n:::\n\n\n- [ ] find distribution of jth order statistic from a uniform(0,maxp) sample\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmaxp=0.1\nnullp = runif(1000,max=maxp)\nqqunif_maxp(nullp,maxp=maxp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}