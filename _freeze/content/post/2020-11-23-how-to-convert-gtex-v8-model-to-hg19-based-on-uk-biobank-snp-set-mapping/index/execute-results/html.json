{
  "hash": "b1fe3f12819eaee2184a3c92cf23cbff",
  "result": {
    "markdown": "---\ntitle: How to convert GTEx v8 model to hg19 based on UK Biobank SNP set mapping\nauthor: Sabrina Mi\ndate: '2020-11-23'\nslug: how-to-convert-gtex-v8-model-to-hg19-based-on-uk-biobank-snp-set-mapping\ncategories: []\ntags:\n  - how to\n  - prediction model\ndescription: ''\ntopics: []\n---\n\n\n`/gpfs/data/im-lab/nas40t2/Data/References/mappings/UKB2GTEx_mapping.txt.gz` contains information for variants in UK Biobank genotypes. The columns are \n\n\n::: {.cell}\n\n```{.bash .cell-code}\nvariant\tchromosome\tposition\tnon_effect_allele\teffect_allele\trsid\tzscore\tpanel_variant_id\n1:692794:CA:C\tchr1\t757414\tCA\tC\t1:692794_CA_C\t1\tNA\n1:693731:A:G\tchr1\t758351\tA\tG\trs12238997\t1\tchr1_758351_A_G_b38\n1:707522:G:C\tchr1\t772142\tG\tC\trs371890604\t1\tchr1_772142_G_C_b38\n1:717587:G:A\tchr1\t782207\tG\tA\trs144155419\t1\tchr1_782207_G_A_b38\n```\n:::\n\n\nMetaXcan prediction models has its own format to identify variants, so a mapping file like `UKB2GTEx_mapping.txt.gz` allows us to convert the variants in prediction models to the corresponding ID used in UK Biobank data. The variant column has the variant's ID in the UK Biobank data and the panel_variant_id column has it's ID used in prediction models, specifically the GTEx V8 models.\n\n`/gpfs/data/im-lab/nas40t2/Data/References/mappings/map_GTEx_v8_models_to_UKB_SNPset.tar` has a mashr model trained on GTEx V8 Whole Blood tissue along with its covariance matrix. They have variant ids in the panel_variant_id chr_pos_ref_alt_b38 format, which we want to swap to the UK Biobank format. Unpack it:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ntar -xvf /gpfs/data/im-lab/nas40t2/Data/References/mappings/map_GTEx_v8_models_to_UKB_SNPset.tar\n```\n:::\n\n\nThe prediction models are SQLite databases, which can be queried in R with the [RSQLite](https://www.datacamp.com/community/tutorials/sqlite-in-r) package.\n\nStart by reading the prediction model into R.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\nmapping <- fread(\"/gpfs/data/im-lab/nas40t2/Data/References/mappings/UKB2GTEx_mapping.txt.gz\")\n```\n:::\n\n\nNext, load the prediction model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RSQLite)\nconn <- dbConnect(RSQLite::SQLite(), \"/gpfs/data/im-lab/nas40t2/Data/References/mappings/map_GTEx_v8_models_to_UKB_SNPset/mashr_Whole_Blood.db\")\ndbListTables(conn)\nweights <- dbGetQuery(conn, 'SELECT * FROM weights')\nextra <- dbGetQuery(conn, 'SELECT * FROM extra')\ndbDisconnect(conn)\n```\n:::\n\n\nThe mashr prediction model has two tables weights and extra, and the dbGetQuery calls pull all entries from the weights and extra table.\n\nWe only need the two columns, variant and panel_variant_id. Then we inner join the mapping with the variants in the weights table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nmapping <- select(mapping, variant, panel_variant_id)\nmapped_weights <- inner_join(weights, mapping, by=c(\"varID\" = \"panel_variant_id\"))\nmapped_weights <- mapped_weights %>% mutate(varID = variant) %>% select(-variant)\n```\n:::\n\n\nUpdate the n.snps.in.model column in the extra table:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn.snps <- mapped_weights %>% group_by(gene) %>% summarise(n.snps.in.model = n())\nupdated_extra <- inner_join(n.snps, extra %>% select(-n.snps.in.model), by=\"gene\")\n```\n:::\n\n\nWrite the new tables to a new RSQLite database file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconn <- dbConnect(RSQLite::SQLite(), \"/gpfs/data/im-lab/nas40t2/Data/References/mappings/map_GTEx_v8_models_to_UKB_SNPset/mashr_Whole_Blood_UKB.db\")\ndbWriteTable(conn, \"weights\", mapped_weights)\ndbWriteTable(conn, \"extra\", updated_extra)\ndbDisconnect(conn)\n```\n:::\n\n\nSimilarly, we inner join to convert both RSID1 and RSID2 columns in `/gpfs/data/im-lab/nas40t2/Data/References/mappings/map_GTEx_v8_models_to_UKB_SNPset/map_GTEx_v8_models_to_UKB_SNPset/mashr_Whole_Blood.txt.gz`\n\n::: {.cell}\n\n```{.r .cell-code}\ncovariance <- fread(\"/gpfs/data/im-lab/nas40t2/Data/References/mappings/map_GTEx_v8_models_to_UKB_SNPset/map_GTEx_v8_models_to_UKB_SNPset/mashr_Whole_Blood.txt.gz\")\ncovariance <- inner_join(covariance, merged, by=c(\"RSID1\" = \"varID\")) %>% mutate(RSID1 = variant) %>% select(-variant)\ncovariance <- inner_join(covariance, merged, by=c(\"RSID2\" = \"varID\")) %>% mutate(RSID2 = variant) %>% select(-variant)\ncovariance <- covariance %>% select(GENE, variant.x, variant.y, VALUE) %>% rename(RSID1 = variant.x, RSID2 = variant.y) \nwrite.table(covariance, \"/gpfs/data/im-lab/nas40t2/Data/References/mappings/map_GTEx_v8_models_to_UKB_SNPset/map_GTEx_v8_models_to_UKB_SNPset/mashr_Whole_Blood_UKB.txt\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}