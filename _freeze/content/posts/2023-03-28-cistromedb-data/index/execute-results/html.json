{
  "hash": "591354df106374f14dc6c385d29ff0f4",
  "result": {
    "markdown": "---\ntitle: \"Cistrome DB data\"\nauthor: \"Haky Im\"\ndate: \"2023-03-28\"\nformat:\n  html:\n    code-fold: false\n    code-summary: \"Show the code\"\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressMessages(library(tidyverse))\nsuppressMessages(library(glue))\nPRE = \"/Users/haekyungim/Library/CloudStorage/Box-Box/LargeFiles/imlab-data/data-Github/web-data\"\n##PRE=\"/Users/margaretperry/Library/CloudStorage/Box-Box/imlab-data/data-Github/web-data \"\n##PRE=\"/Users/temi/Library/CloudStorage/Box-Box/imlab-data/data-Github/web-data\"\n## COPY THE DATE AND SLUG fields FROM THE HEADER\nSLUG=\"cistromedb-data\" ## copy the slug from the header\nbDATE='2023-03-28' ## copy the date from the blog's header here\nDATA = glue(\"{PRE}/{bDATE}-{SLUG}\")\nif(!file.exists(DATA)) system(glue::glue(\"mkdir {DATA}\"))\nWORK=DATA\n\n## move data to DATA\n#tempodata=(\"~/Downloads/tempo/gwas_catalog_v1.0.2-associations_e105_r2022-04-07.tsv\")\n#system(glue::glue(\"cp {tempodata} {DATA}/\"))\n\n## system(glue(\"open {DATA}\")) ## this will open the folder \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = read_tsv(glue(\"{DATA}/human_factor_full_QC.txt\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 11348 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (6): Species, GSMID, Factor, Cell_line, Cell_type, Tissue_type\ndbl (7): DCid, FastQC, UniquelyMappedRatio, PBC, PeaksFoldChangeAbove10, FRi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"DCid\"                   \"Species\"                \"GSMID\"                 \n [4] \"Factor\"                 \"Cell_line\"              \"Cell_type\"             \n [7] \"Tissue_type\"            \"FastQC\"                 \"UniquelyMappedRatio\"   \n[10] \"PBC\"                    \"PeaksFoldChangeAbove10\" \"FRiP\"                  \n[13] \"PeaksUnionDHSRatio\"    \n```\n:::\n\n```{.r .cell-code}\ndata %>% select(Factor,Cell_line,Cell_type,Tissue_type) %>% unique() %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4426    4\n```\n:::\n\n```{.r .cell-code}\ndata %>% count(Factor,Cell_line,Cell_type,Tissue_type) %>% arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4,426 × 5\n   Factor Cell_line Cell_type  Tissue_type     n\n   <chr>  <chr>     <chr>      <chr>       <int>\n 1 ESR1   MCF-7     Epithelium Breast        213\n 2 AR     LNCaP     Epithelium Prostate      143\n 3 POLR2A HeLa      Epithelium Cervix         76\n 4 AR     VCaP      Epithelium Prostate       64\n 5 POLR2A MCF-7     Epithelium Breast         64\n 6 NR3C1  A549      Epithelium Lung           46\n 7 POLR2A HCT-116   None       HCT116         46\n 8 CTCF   MCF-7     Epithelium Breast         45\n 9 FOXA1  LNCaP     Epithelium Prostate       45\n10 ESR1   None      None       Breast         42\n# … with 4,416 more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\ndata %>% count(Factor,Cell_line,Cell_type,Tissue_type) %>% .[[\"n\"]] %>% table()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n.\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n2223 1196  299  282   89  106   36   43   18   28   12   17    4    8    7    6 \n  17   18   19   20   22   23   24   25   26   28   29   30   31   32   33   34 \n   1    8    3    2    1    1    2    3    2    1    1    3    2    2    3    3 \n  37   38   40   42   45   46   64   76  143  213 \n   2    1    1    1    2    2    2    1    1    1 \n```\n:::\n\n```{.r .cell-code}\n## are cell line==None non tumor?\ndata %>% filter(Cell_line==\"None\") %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1817   13\n```\n:::\n\n```{.r .cell-code}\n## how many unique cell lines?\ndata %>% count(Cell_line) %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 520   2\n```\n:::\n\n```{.r .cell-code}\n## how many unique cell types?\ndata %>% count(Cell_type) %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 153   2\n```\n:::\n\n```{.r .cell-code}\n## how many unique tissue types?\ndata %>% count(Tissue_type) %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 84  2\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}